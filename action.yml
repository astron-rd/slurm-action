name: 'SLURM srun'
description: 'Run commands directly using srun'
inputs:
  partition:
    description: 'SLURM partition'
    required: false
    default: ''
  gres:
    description: 'GRES requirements'
    required: false
    default: ''
  time:
    description: 'Time limit'
    required: false
    default: ''
  commands:
    description: 'Commands to run'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Execute with srun
      shell: bash
      run: |
        # Create temporary directory
        TEMP_DIR=$(mktemp -d --tmpdir=$RUNNER_TEMP)
        ln -s $RUNNER_TEMP/* $TEMP_DIR

        # Generate run script
        SCRIPT_PATH="$TEMP_DIR/run.sh"
        cat << 'EOF' > "$SCRIPT_PATH"
        #!/bin/bash
        set -x
        cd "$TEMP_DIR"
        {
        ${{ inputs.commands }}
        } 2>&1  # Combine stdout and stderr
        EOF

        chmod +x "$SCRIPT_PATH"

        # Build srun command components
        SRUN_ARGS=(
          --chdir="$TEMP_DIR"
          --job-name="github-actions-$GITHUB_RUN_ID"
          --ntasks=1
          --nodes=1
        )

        # Add partition if specified
        if [[ -n "${{ inputs.partition }}" ]]; then
          SRUN_ARGS+=(--partition="${{ inputs.partition }}")
        fi

        # Add GRES requirements if specified
        if [[ -n "${{ inputs.gres }}" ]]; then
          SRUN_ARGS+=(--gres="${{ inputs.gres }}")
        fi

        # Add time limit if specified
        if [[ -n "${{ inputs.time }}" ]]; then
          SRUN_ARGS+=(--time="${{ inputs.time }}")
        fi

        srun "${SRUN_ARGS[@]}" "$SCRIPT_PATH"
        EXIT_CODE=$?

        # Cleanup
        rm -rf "$TEMP_DIR"

        if [ $EXIT_CODE -ne 0 ]; then
          echo "❌ SLURM job failed with exit code: $EXIT_CODE"
          exit $EXIT_CODE
        else
          echo "✅ SLURM job completed successfully"
        fi
